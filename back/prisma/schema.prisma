generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Center {
  id                    String   @id @default(uuid()) @map("id") @db.Uuid
  name                  String   @unique
  address               String?
  phone                 String?
  email                 String?
  supervisorName        String?  @map("supervisor_name")
  registrationFee       Decimal  @default(0.00) @map("registration_fee") @db.Decimal(10, 2)
  latePaymentFeePerWeek Decimal  @default(0.00) @map("late_payment_fee_per_week") @db.Decimal(10, 2)
  createdAt             DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  users                  User[]
  parents                Parent[]
  children               Child[]
  emergencyContacts      EmergencyContact[]
  consentTemplates       ConsentTemplate[]
  policyTemplates        PolicyTemplate[]
  staff                  Staff[]
  childConsents          ChildConsent[]
  childParents           ChildParent[]
  childEmergencyContacts ChildEmergencyContact[]
  childMedicalInfo       ChildMedicalInfo[]
  healthCareProviders    HealthCareProvider[]
  immunizationRecords    ImmunizationRecord[]
  childAttendanceRecords ChildAttendance[]
  dailyUpdates           DailyUpdate[]
  policyAgreements       PolicyAgreement[]
  staffSignoffs          StaffSignoff[]

  @@map("centers")
}

enum UserRole {
  SUPER_ADMIN
  CENTER_ADMIN
  STAFF
  PARENT
}

model User {
  id           String    @id @default(uuid()) @map("id") @db.Uuid
  centerId     String?   @map("center_id") @db.Uuid
  center       Center?   @relation(fields: [centerId], references: [id])
  email        String    @unique
  passwordHash String    @map("password_hash")
  firstName    String?   @map("first_name")
  lastName     String?   @map("last_name")
  role         UserRole  @default(PARENT)
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  lastLoginAt  DateTime? @map("last_login_at") @db.Timestamptz(6)

  usageQuotaMinutes      Int @default(60) @map("usage_quota_minutes")
  usageConsumedMinutes   Int @default(0) @map("usage_consumed_minutes")
  usageQuotaSummaries    Int @default(5) @map("usage_quota_summaries")
  usageConsumedSummaries Int @default(0) @map("usage_consumed_summaries")

  stripeCustomerId String? @unique @map("stripe_customer_id")

  jobs          Job[]
  parentProfile Parent?
  staffProfile  Staff?

  childConsentsSignedBySupervisor ChildConsent[] @relation("SupervisorSignedBy")
  childConsentsSignedByParent     ChildConsent[] @relation("ParentSignedBy")

  @@unique([centerId, email])
  @@map("users")
}

model Job {
  id          String  @id @default(uuid()) @map("id") @db.Uuid
  userId      String  @map("user_id") @db.Uuid
  user        User    @relation(fields: [userId], references: [id])
  title       String
  description String?

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("jobs")
}

model Parent {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  userId String? @unique @map("user_id") @db.Uuid
  user   User?   @relation(fields: [userId], references: [id])

  firstName           String  @map("first_name")
  lastName            String  @map("last_name")
  relationshipToChild String  @map("relationship_to_child")
  address             String?
  phoneNumber         String? @map("phone_number")
  emailAddress        String? @map("email_address")
  employer            String?
  workNumber          String? @map("work_number")

  children         ChildParent[]
  policyAgreements PolicyAgreement[]
  signedConsents   ChildConsent[]    @relation("ParentProfileConsent")

  @@unique([centerId, emailAddress])
  @@map("parents")
}

enum ChildSex {
  MALE
  FEMALE
  UNKNOWN
  OTHER
}

model Child {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  firstName     String    @map("first_name")
  middleName    String?   @map("middle_name")
  lastName      String    @map("last_name")
  preferredName String?   @map("preferred_name")
  dateOfBirth   DateTime  @map("date_of_birth") @db.Date
  sex           ChildSex?

  homeAddress String @map("home_address")

  languagesSpokenAtHome String[] @map("languages_spoken_at_home")

  custodialParentNames  String? @map("custodial_parent_names")
  prohibitedAccessNames String? @map("prohibited_access_names")

  parents            ChildParent[]
  emergencyContacts  ChildEmergencyContact[]
  medicalInfo        ChildMedicalInfo?
  healthcareProvider HealthCareProvider?
  immunizationRecord ImmunizationRecord?
  childConsents      ChildConsent[]
  policyAgreements   PolicyAgreement[]

  attendanceRecords ChildAttendance[]
  dailyUpdates      DailyUpdate[]

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([centerId, firstName, lastName, dateOfBirth])
  @@map("children")
}

model ChildParent {
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  parentId String @map("parent_id") @db.Uuid
  parent   Parent @relation(fields: [parentId], references: [id])

  relationshipToChild String @map("relationship_to_child")

  @@id([childId, parentId])
  @@map("child_parents")
}

model EmergencyContact {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  name               String
  address            String?
  phoneNumber        String  @map("phone_number")
  relationToChild    String  @map("relation_to_child")
  authorizedToPickUp Boolean @default(false) @map("authorized_to_pick_up")

  children ChildEmergencyContact[]

  @@unique([centerId, name, phoneNumber])
  @@map("emergency_contacts")
}

model ChildEmergencyContact {
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  emergencyContactId String           @map("emergency_contact_id") @db.Uuid
  emergencyContact   EmergencyContact @relation(fields: [emergencyContactId], references: [id])

  @@id([childId, emergencyContactId])
  @@map("child_emergency_contacts")
}

enum ImmunizationExemptionType {
  MEDICAL
  RELIGIOUS
  CONSCIENCE
}

enum ToiletingSupportLevel {
  INDEPENDENT
  ASSISTANCE_REMINDERS
  FULL_SUPPORT
}

model ChildMedicalInfo {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @unique @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  additionalEmergencyInfo String? @map("additional_emergency_info")

  immunizationRecordUrl String?                    @map("immunization_record_url")
  immunizationExemption ImmunizationExemptionType? @map("immunization_exemption")

  hasCommunicableDiseases  Boolean @default(false) @map("has_communicable_diseases")
  communicableDiseasesList String? @map("communicable_diseases_list")

  hasMedicalNeed            Boolean @default(false) @map("has_medical_need")
  medicalNeedDetails        String? @map("medical_need_details")
  usesMedicalDevices        Boolean @default(false) @map("uses_medical_devices")
  medicalDeviceInstructions String? @map("medical_device_instructions")

  hasLifeThreateningAllergy     Boolean @default(false) @map("has_life_threatening_allergy")
  lifeThreateningAllergyDetails String? @map("life_threatening_allergy_details")
  hasOtherAllergies             Boolean @default(false) @map("has_other_allergies")
  otherAllergyDetails           String? @map("other_allergy_details")

  hasSpecialDietaryReqs      Boolean @default(false) @map("has_special_dietary_reqs")
  dietaryRequirementsDetails String? @map("dietary_requirements_details")

  isInDiapers           Boolean                @default(false) @map("is_in_diapers")
  toiletingSupportLevel ToiletingSupportLevel? @map("toileting_support_level")

  additionalCareInfo String? @map("additional_care_info")

  @@map("child_medical_info")
}

model HealthCareProvider {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @unique @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  physicianName          String  @map("physician_name")
  physicianAddress       String  @map("physician_address")
  physicianPhoneNumber   String  @map("physician_phone_number")
  childsHealthCardNumber String? @map("childs_health_card_number")

  @@map("health_care_providers")
}

model ImmunizationRecord {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @unique @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  recordUrl    String   @map("record_url")
  dateUploaded DateTime @default(now()) @map("date_uploaded") @db.Timestamptz(6)

  @@map("immunization_records")
}

model ChildAttendance {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  date         DateTime  @map("date") @db.Date
  isPresent    Boolean   @default(true) @map("is_present")
  checkInTime  DateTime? @map("check_in_time") @db.Timestamptz(6)
  checkOutTime DateTime? @map("check_out_time") @db.Timestamptz(6)
  notes        String?

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([childId, date])
  @@map("child_attendance")
}

enum ConsentType {
  FIELD_TRIP
  PHOTOGRAPHY
  NON_PRESCRIPTION_MEDS
  EMERGENCY_MEDICAL_TREATMENT
  RELEASE_OF_INFORMATION
}

model ConsentTemplate {
  id       String  @id @default(uuid()) @map("id") @db.Uuid
  centerId String? @map("center_id") @db.Uuid
  center   Center? @relation(fields: [centerId], references: [id])

  type     ConsentType
  version  String
  title    String
  content  String      @db.Text
  isActive Boolean     @default(true)

  childConsents ChildConsent[]

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([centerId, type, version])
  @@map("consent_templates")
}

enum PhotoConsentScope {
  CENTRE_USE_ONLY
  ADVERTISING
  SOCIAL_MEDIA
  NEWSLETTER
  WEBSITE
}

model ChildConsent {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  consentTemplateId String          @map("consent_template_id") @db.Uuid
  consentTemplate   ConsentTemplate @relation(fields: [consentTemplateId], references: [id])

  parentConsentGiven Boolean  @map("parent_consent_given")
  parentSignature    String?  @map("parent_signature")
  parentSignedAt     DateTime @map("parent_signed_at") @db.Timestamptz(6)
  parentSignedById   String?  @map("parent_signed_by_id") @db.Uuid

  parentSignedByUser            User?   @relation(fields: [parentSignedById], references: [id], name: "ParentSignedBy")
  parentProfile                 Parent? @relation(fields: [parentSignedByParentProfileId], references: [id], name: "ParentProfileConsent")
  parentSignedByParentProfileId String? @map("parent_signed_by_parent_profile_id") @db.Uuid

  supervisorConsentGiven Boolean?  @map("supervisor_consent_given")
  supervisorSignature    String?   @map("supervisor_signature")
  supervisorSignedAt     DateTime? @map("supervisor_signed_at") @db.Timestamptz(6)

  supervisorSignedById   String? @map("supervisor_signed_by_id") @db.Uuid
  supervisorSignedByUser User?   @relation(fields: [supervisorSignedById], references: [id], name: "SupervisorSignedBy")

  photoConsentScopes   PhotoConsentScope[] @map("photo_consent_scopes")
  parentFullName       String?             @map("parent_full_name")
  centreSupervisorName String?             @map("centre_supervisor_name")

  sunscreenConsent        Boolean? @map("sunscreen_consent")
  lotionConsent           Boolean? @map("lotion_consent")
  lipBalmConsent          Boolean? @map("lip_balm_consent")
  vaselineConsent         Boolean? @map("vaseline_consent")
  diaperRashCreamConsent  Boolean? @map("diaper_rash_cream_consent")
  handSanitizerConsent    Boolean? @map("hand_sanitizer_consent")
  otherNonPrescriptionMed String?  @map("other_non_prescription_med")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([childId, consentTemplateId])
  @@map("child_consents")
}

enum PolicyType {
  REGISTRATION_FEE
  EMERGENCY_TREATMENT
  MEDICAL_SURGICAL_TREATMENT
  PARENT_HANDBOOK
  PRIVACY_POLICY
  CODE_OF_CONDUCT
}

model PolicyTemplate {
  id       String  @id @default(uuid()) @map("id") @db.Uuid
  centerId String? @map("center_id") @db.Uuid
  center   Center? @relation(fields: [centerId], references: [id])

  type     PolicyType
  version  String
  title    String
  content  String     @db.Text
  isActive Boolean    @default(true)

  policyAgreements PolicyAgreement[]

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([centerId, type, version])
  @@map("policy_templates")
}

model PolicyAgreement {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  parentId String @map("parent_id") @db.Uuid
  parent   Parent @relation(fields: [parentId], references: [id])

  policyTemplateId String         @map("policy_template_id") @db.Uuid
  policyTemplate   PolicyTemplate @relation(fields: [policyTemplateId], references: [id])

  parentAcknowledged     Boolean  @default(false) @map("parent_acknowledged")
  parentSignature        String?  @map("parent_signature")
  parentSignedAt         DateTime @map("parent_signed_at") @db.Timestamptz(6)
  parentSignedByFullName String?  @map("parent_signed_by_full_name")

  childId String? @map("child_id") @db.Uuid
  child   Child?  @relation(fields: [childId], references: [id])

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([parentId, policyTemplateId, childId])
  @@map("policy_agreements")
}

model Staff {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  userId String? @unique @map("user_id") @db.Uuid
  user   User?   @relation(fields: [userId], references: [id])

  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  email       String  @unique
  phoneNumber String? @map("phone_number")

  cprRenewalDate         DateTime? @map("cpr_renewal_date") @db.Date
  eceLicenseExpiryDate   DateTime? @map("ece_license_expiry_date") @db.Date
  tbTestDate             DateTime? @map("tb_test_date") @db.Date
  vaccinesList           Json?     @map("vaccines_list") @db.JsonB
  policeRecordCheckDate  DateTime? @map("police_record_check_date") @db.Date
  offenseDeclarationDate DateTime? @map("offense_declaration_date") @db.Date

  staffSignoffs StaffSignoff[]
  dailyUpdates  DailyUpdate[]

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([centerId, email])
  @@map("staff")
}

model StaffSignoff {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  staffId String @map("staff_id") @db.Uuid
  staff   Staff  @relation(fields: [staffId], references: [id])

  documentType  String   @map("document_type")
  documentId    String?  @map("document_id") @db.Uuid
  signoffReason String?  @map("signoff_reason")
  signature     String?
  signedAt      DateTime @default(now()) @map("signed_at") @db.Timestamptz(6)

  @@map("staff_signoffs")
}

model DailyUpdate {
  id       String @id @default(uuid()) @map("id") @db.Uuid
  centerId String @map("center_id") @db.Uuid
  center   Center @relation(fields: [centerId], references: [id])

  childId String @map("child_id") @db.Uuid
  child   Child  @relation(fields: [childId], references: [id])

  date    DateTime @map("date") @db.Date
  staffId String   @map("staff_id") @db.Uuid
  staff   Staff    @relation(fields: [staffId], references: [id])

  mood          String?
  napStartTime  DateTime? @map("nap_start_time") @db.Timestamptz(6)
  napEndTime    DateTime? @map("nap_end_time") @db.Timestamptz(6)
  meals         Json?     @db.JsonB
  diaperChanges Json?     @db.JsonB
  activities    String?   @db.Text
  notes         String?   @db.Text

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@unique([childId, date])
  @@map("daily_updates")
}
